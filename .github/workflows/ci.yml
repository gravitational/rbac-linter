name: Build & Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.0
      - name: Restore Python packages
        uses: BSFishy/pip-action@v1
        with:
          requirements: requirements.txt
      - name: Run Python tests
        run: python test.py
      - name: Run Python role equivalence check script
        run: python role_equivalence_check.py data/role.yml data/role2.yml --debug
      - name: Run Python role query script
        run: python role_query.py data/nodes.yml data/roles.yml --users data/users.yml --debug
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Rust dependency cache
        uses: Swatinem/rust-cache@v1
      - name: Check cache hit
        if: env.cache-hit
        run: echo "HIT!"
        shell: bash
      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@v1
        if: matrix.os == 'windows-latest'
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Run
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: ./data/role.yml
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
